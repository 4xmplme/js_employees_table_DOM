{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCEA,IAAM,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAY,EAAM,KAAK,CACvB,EAAY,EAAM,OAAO,CAAC,EAAE,CAC5B,EAAW,EAAG,EAAU,IAAI,CAAC,EAAE,CAAC,KAAK,EACrC,EAAQ,EAAG,EAAU,IAAI,EAEzB,EAAO,SAAS,aAAa,CAAC,QAC9B,EAAO,SAAS,aAAa,CAAC,QAE9B,EAAY,SAAS,aAAa,CAAC,SACnC,EAAgB,SAAS,aAAa,CAAC,SACvC,EAAc,SAAS,aAAa,CAAC,SACrC,EAAW,SAAS,aAAa,CAAC,SAClC,EAAc,SAAS,aAAa,CAAC,SAErC,EAAY,SAAS,aAAa,CAAC,SACnC,EAAgB,SAAS,aAAa,CAAC,SACvC,EAAe,SAAS,aAAa,CAAC,UACtC,EAAW,SAAS,aAAa,CAAC,SAClC,EAAc,SAAS,aAAa,CAAC,SAErC,EAAe,SAAS,aAAa,CAAC,UAExC,EAAe,KACf,EAAY,KAEhB,SAAS,EAAW,CAAM,EACxB,OAAO,CAAM,CAAC,EAAE,CAAC,WAAW,GAAK,EAAO,KAAK,CAAC,EAChD,CAEA,SAAS,EAAY,CAAK,EACxB,MAAO,CAAC,EAAM,OAAO,CAAC,MAAO,GAC/B,CAEA,SAAS,EAAc,CAAK,EAC1B,MAAO,IAAM,EAAM,OAAO,CAAC,wBAAyB,IACtD,CAgDA,SAAS,EAAc,CAAM,CAAE,CAAO,EACpC,EAAQ,OAAO,CAAC,SAAC,CAAjB,EACE,IAAM,EAAS,SAAS,aAAa,CAAC,SAEtC,CAAA,EAAO,KAAK,CAAG,EACf,EAAO,W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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar table = document.querySelector(\"table\");\nvar tableHead = table.tHead;\nvar tableBody = table.tBodies[0];\nvar columns = _to_consumable_array(tableHead.rows[0].cells);\nvar rows = _to_consumable_array(tableBody.rows);\nvar body = document.querySelector(\"body\");\nvar form = document.createElement(\"form\");\nvar labelName = document.createElement(\"label\");\nvar labelPosition = document.createElement(\"label\");\nvar labelOffice = document.createElement(\"label\");\nvar labelAge = document.createElement(\"label\");\nvar labelSalary = document.createElement(\"label\");\nvar nameInput = document.createElement(\"input\");\nvar positionInput = document.createElement(\"input\");\nvar officeSelect = document.createElement(\"select\");\nvar ageInput = document.createElement(\"input\");\nvar salaryInput = document.createElement(\"input\");\nvar submitButton = document.createElement(\"button\");\nvar sortedColumn = null;\nvar activeRow = null;\nfunction capitalize(string) {\n    return string[0].toUpperCase() + string.slice(1);\n}\nfunction parseNumber(value) {\n    return +value.replace(/\\D/g, \"\");\n}\nfunction parseCurrency(value) {\n    return \"$\" + value.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\nfunction sortByColumn(column) {\n    var columnIndex = columns.indexOf(column);\n    rows.sort(function(rowA, rowB) {\n        var _rowA_cells_columnIndex = rowA.cells[columnIndex], cellA = _rowA_cells_columnIndex.textContent;\n        var _rowB_cells_columnIndex = rowB.cells[columnIndex], cellB = _rowB_cells_columnIndex.textContent;\n        switch(column.textContent){\n            case \"Name\":\n            case \"Position\":\n            default:\n                return cellA.localeCompare(cellB);\n            case \"Age\":\n            case \"Salary\":\n                return parseNumber(cellA) - parseNumber(cellB);\n        }\n    });\n    return column;\n}\nfunction handleColumnSort(column) {\n    column.addEventListener(\"click\", function() {\n        var _tableBody;\n        if (sortedColumn === column) rows.reverse();\n        else sortedColumn = sortByColumn(column);\n        (_tableBody = tableBody).append.apply(_tableBody, _to_consumable_array(rows));\n    });\n}\nfunction handleRowSelect(row) {\n    row.addEventListener(\"click\", function() {\n        row.classList.toggle(\"active\");\n        if (activeRow && activeRow !== row) activeRow.classList.remove(\"active\");\n        activeRow = !activeRow || activeRow !== row ? row : null;\n    });\n}\nfunction appendOptions(select, options) {\n    options.forEach(function(officeSelectOption) {\n        var option = document.createElement(\"option\");\n        option.value = officeSelectOption;\n        option.textContent = officeSelectOption;\n        select.append(option);\n    });\n}\nfunction configureInput(input) {\n    input.origin.name = input.name;\n    input.origin.dataset.qa = input[\"data-qa\"];\n    if (input.type === \"select\") appendOptions(inputs[2].origin, inputs[2].options);\n    else input.origin.type = input.type;\n}\nfunction validateInput(input) {\n    input.value = input.value.trim();\n    switch(input.name){\n        case nameInput.name:\n            if (input.value.length < 4) {\n                showNotification(\"error\", \"Name must contain at least 4 letters\");\n                return false;\n            }\n            break;\n        case positionInput.name:\n            if (input.value.length < 4) {\n                showNotification(\"error\", \"Possition must contain at least 4 letters\");\n                return false;\n            }\n            break;\n        case ageInput.name:\n            if (input.value < 18 || input.value > 80) {\n                showNotification(\"error\", \"Age must be between 18 and 80 inclusively\");\n                return false;\n            }\n            break;\n        default:\n            break;\n    }\n    return true;\n}\nfunction showNotification(type, message) {\n    var div = document.createElement(\"div\");\n    var span = document.createElement(\"span\");\n    div.classList.add(\"notification\", type);\n    div.dataset.qa = \"notification\";\n    span.classList.add(\"title\");\n    span.textContent = message;\n    div.append(span);\n    body.append(div);\n    setTimeout(function() {\n        return div.remove();\n    }, 5000);\n}\nfunction handleCellDoubleClick(cell) {\n    var text = cell.textContent, cellIndex = cell.cellIndex;\n    var input = document.createElement(cell.cellIndex === 2 ? \"select\" : \"input\");\n    var isEditing = false;\n    var handleCellEdit = function() {\n        if (isEditing) return;\n        isEditing = true;\n        if (!input.value) {\n            input.remove();\n            cell.textContent = input.type === \"salary\" ? parseCurrency(text) : text;\n        }\n        if (validateInput(input)) {\n            input.remove();\n            cell.textContent = input.name === \"salary\" ? parseCurrency(input.value) : input.value;\n        }\n        isEditing = false;\n    };\n    input.classList.add(\"cell-input\");\n    input.name = inputs[cellIndex].name;\n    if (inputs[cellIndex].type === \"select\") appendOptions(input, inputs[cellIndex].options);\n    else input.type = inputs[cellIndex].type;\n    input.value = input.name === \"salary\" ? parseNumber(text) : text;\n    input.addEventListener(\"blur\", function(blurEvent) {\n        blurEvent.preventDefault();\n        handleCellEdit();\n    });\n    input.addEventListener(\"keypress\", function(inputEvent) {\n        if (inputEvent.key === \"Enter\") {\n            inputEvent.preventDefault();\n            handleCellEdit();\n        }\n    });\n    cell.textContent = \"\";\n    cell.append(input);\n    input.focus();\n}\nfunction handleFormSubmit(e) {\n    e.preventDefault();\n    var notification = body.querySelector(\".notification\");\n    if (notification) notification.remove();\n    for(var i = 0; i < form.elements.length - 1; i++){\n        var input = form[i];\n        if (!input.value) return showNotification(\"error\", \"\".concat(capitalize(input.name), \" is required\"));\n        if (!validateInput(input)) return;\n    }\n    var tableRow = document.createElement(\"tr\");\n    for(var i1 = 0; i1 < form.elements.length - 1; i1++){\n        var input1 = form[i1];\n        var tableData = document.createElement(\"td\");\n        var textContent = input1.value;\n        tableData.textContent = textContent;\n        if (input1 === salaryInput) tableData.textContent = tableData.textContent.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n        if (input1.name === salaryInput.name) textContent = parseCurrency(input1.value);\n        tableData.textContent = textContent;\n        tableRow.append(tableData);\n    }\n    tableBody.append(tableRow);\n    form.reset();\n    return showNotification(\"success\", \"New employee is successfully added to the table\");\n}\nvar inputs = [\n    {\n        name: \"name\",\n        type: \"text\",\n        \"data-qa\": \"name\",\n        origin: nameInput\n    },\n    {\n        name: \"position\",\n        type: \"text\",\n        \"data-qa\": \"position\",\n        origin: positionInput\n    },\n    {\n        name: \"office\",\n        type: \"select\",\n        \"data-qa\": \"office\",\n        origin: officeSelect,\n        options: [\n            \"Tokyo\",\n            \"Singapore\",\n            \"London\",\n            \"New York\",\n            \"Edinburgh\",\n            \"San Francisco\"\n        ]\n    },\n    {\n        name: \"age\",\n        type: \"number\",\n        \"data-qa\": \"age\",\n        origin: ageInput\n    },\n    {\n        name: \"salary\",\n        type: \"number\",\n        \"data-qa\": \"salary\",\n        origin: salaryInput\n    }\n];\ncolumns.forEach(handleColumnSort);\nrows.forEach(handleRowSelect);\ninputs.forEach(configureInput);\nsubmitButton.textContent = \"Save to table\";\nsubmitButton.type = \"submit\";\nlabelName.append(capitalize(nameInput.name), nameInput);\nlabelPosition.append(capitalize(positionInput.name), positionInput);\nlabelOffice.append(capitalize(officeSelect.name), officeSelect);\nlabelAge.append(capitalize(ageInput.name), ageInput);\nlabelSalary.append(capitalize(salaryInput.name), salaryInput);\nform.classList.add(\"new-employee-form\");\nform.append(labelName, labelPosition, labelOffice, labelAge, labelSalary, submitButton);\nform.addEventListener(\"submit\", handleFormSubmit);\nbody.append(form);\ntableBody.addEventListener(\"dblclick\", function(cellEvent) {\n    cellEvent.preventDefault();\n    if (cellEvent.target.tagName === \"TD\") handleCellDoubleClick(cellEvent.target);\n});\n\n//# sourceMappingURL=index.ae03fa3b.js.map\n","'use strict';\n\nconst table = document.querySelector('table');\nconst tableHead = table.tHead;\nconst tableBody = table.tBodies[0];\nconst columns = [...tableHead.rows[0].cells];\nconst rows = [...tableBody.rows];\n\nconst body = document.querySelector('body');\nconst form = document.createElement('form');\n\nconst labelName = document.createElement('label');\nconst labelPosition = document.createElement('label');\nconst labelOffice = document.createElement('label');\nconst labelAge = document.createElement('label');\nconst labelSalary = document.createElement('label');\n\nconst nameInput = document.createElement('input');\nconst positionInput = document.createElement('input');\nconst officeSelect = document.createElement('select');\nconst ageInput = document.createElement('input');\nconst salaryInput = document.createElement('input');\n\nconst submitButton = document.createElement('button');\n\nlet sortedColumn = null;\nlet activeRow = null;\n\nfunction capitalize(string) {\n  return string[0].toUpperCase() + string.slice(1);\n}\n\nfunction parseNumber(value) {\n  return +value.replace(/\\D/g, '');\n}\n\nfunction parseCurrency(value) {\n  return '$' + value.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n}\n\nfunction sortByColumn(column) {\n  const columnIndex = columns.indexOf(column);\n\n  rows.sort((rowA, rowB) => {\n    const { textContent: cellA } = rowA.cells[columnIndex];\n    const { textContent: cellB } = rowB.cells[columnIndex];\n\n    switch (column.textContent) {\n      case 'Name':\n      case 'Position':\n      default:\n        return cellA.localeCompare(cellB);\n\n      case 'Age':\n      case 'Salary':\n        return parseNumber(cellA) - parseNumber(cellB);\n    }\n  });\n\n  return column;\n}\n\nfunction handleColumnSort(column) {\n  column.addEventListener('click', () => {\n    if (sortedColumn === column) {\n      rows.reverse();\n    } else {\n      sortedColumn = sortByColumn(column);\n    }\n\n    tableBody.append(...rows);\n  });\n}\n\nfunction handleRowSelect(row) {\n  row.addEventListener('click', () => {\n    row.classList.toggle('active');\n\n    if (activeRow && activeRow !== row) {\n      activeRow.classList.remove('active');\n    }\n\n    activeRow = !activeRow || activeRow !== row ? row : null;\n  });\n}\n\nfunction appendOptions(select, options) {\n  options.forEach((officeSelectOption) => {\n    const option = document.createElement('option');\n\n    option.value = officeSelectOption;\n    option.textContent = officeSelectOption;\n\n    select.append(option);\n  });\n}\n\nfunction configureInput(input) {\n  input.origin.name = input.name;\n  input.origin.dataset.qa = input['data-qa'];\n\n  if (input.type === 'select') {\n    appendOptions(inputs[2].origin, inputs[2].options);\n  } else {\n    input.origin.type = input.type;\n  }\n}\n\nfunction validateInput(input) {\n  input.value = input.value.trim();\n\n  switch (input.name) {\n    case nameInput.name: {\n      if (input.value.length < 4) {\n        showNotification('error', 'Name must contain at least 4 letters');\n\n        return false;\n      }\n\n      break;\n    }\n\n    case positionInput.name: {\n      if (input.value.length < 4) {\n        showNotification('error', 'Possition must contain at least 4 letters');\n\n        return false;\n      }\n\n      break;\n    }\n\n    case ageInput.name: {\n      if (input.value < 18 || input.value > 80) {\n        showNotification('error', 'Age must be between 18 and 80 inclusively');\n\n        return false;\n      }\n\n      break;\n    }\n\n    default:\n      break;\n  }\n\n  return true;\n}\n\nfunction showNotification(type, message) {\n  const div = document.createElement('div');\n  const span = document.createElement('span');\n\n  div.classList.add('notification', type);\n  div.dataset.qa = 'notification';\n\n  span.classList.add('title');\n  span.textContent = message;\n\n  div.append(span);\n  body.append(div);\n\n  setTimeout(() => div.remove(), 5000);\n}\n\nfunction handleCellDoubleClick(cell) {\n  const { textContent: text, cellIndex } = cell;\n  const input = document.createElement(\n    cell.cellIndex === 2 ? 'select' : 'input',\n  );\n  let isEditing = false;\n\n  const handleCellEdit = () => {\n    if (isEditing) {\n      return;\n    }\n\n    isEditing = true;\n\n    if (!input.value) {\n      input.remove();\n      cell.textContent = input.type === 'salary' ? parseCurrency(text) : text;\n    }\n\n    if (validateInput(input)) {\n      input.remove();\n\n      cell.textContent =\n        input.name === 'salary' ? parseCurrency(input.value) : input.value;\n    }\n\n    isEditing = false;\n  };\n\n  input.classList.add('cell-input');\n  input.name = inputs[cellIndex].name;\n\n  if (inputs[cellIndex].type === 'select') {\n    appendOptions(input, inputs[cellIndex].options);\n  } else {\n    input.type = inputs[cellIndex].type;\n  }\n\n  input.value = input.name === 'salary' ? parseNumber(text) : text;\n\n  input.addEventListener('blur', (blurEvent) => {\n    blurEvent.preventDefault();\n    handleCellEdit();\n  });\n\n  input.addEventListener('keypress', (inputEvent) => {\n    if (inputEvent.key === 'Enter') {\n      inputEvent.preventDefault();\n      handleCellEdit();\n    }\n  });\n\n  cell.textContent = '';\n  cell.append(input);\n  input.focus();\n}\n\nfunction handleFormSubmit(e) {\n  e.preventDefault();\n\n  const notification = body.querySelector('.notification');\n\n  if (notification) {\n    notification.remove();\n  }\n\n  for (let i = 0; i < form.elements.length - 1; i++) {\n    const input = form[i];\n\n    if (!input.value) {\n      return showNotification('error', `${capitalize(input.name)} is required`);\n    }\n\n    if (!validateInput(input)) {\n      return;\n    }\n  }\n\n  const tableRow = document.createElement('tr');\n\n  for (let i = 0; i < form.elements.length - 1; i++) {\n    const input = form[i];\n    const tableData = document.createElement('td');\n    let textContent = input.value;\n\n    tableData.textContent = textContent;\n\n    if (input === salaryInput) {\n      tableData.textContent = tableData.textContent.replace(\n        /\\B(?=(\\d{3})+(?!\\d))/g,\n        ',',\n      );\n    }\n\n    if (input.name === salaryInput.name) {\n      textContent = parseCurrency(input.value);\n    }\n\n    tableData.textContent = textContent;\n    tableRow.append(tableData);\n  }\n\n  tableBody.append(tableRow);\n  form.reset();\n\n  return showNotification(\n    'success',\n    'New employee is successfully added to the table',\n  );\n}\n\nconst inputs = [\n  {\n    name: 'name',\n    type: 'text',\n    'data-qa': 'name',\n    origin: nameInput,\n  },\n  {\n    name: 'position',\n    type: 'text',\n    'data-qa': 'position',\n    origin: positionInput,\n  },\n  {\n    name: 'office',\n    type: 'select',\n    'data-qa': 'office',\n    origin: officeSelect,\n    options: [\n      'Tokyo',\n      'Singapore',\n      'London',\n      'New York',\n      'Edinburgh',\n      'San Francisco',\n    ],\n  },\n  {\n    name: 'age',\n    type: 'number',\n    'data-qa': 'age',\n    origin: ageInput,\n  },\n  {\n    name: 'salary',\n    type: 'number',\n    'data-qa': 'salary',\n    origin: salaryInput,\n  },\n];\n\ncolumns.forEach(handleColumnSort);\nrows.forEach(handleRowSelect);\ninputs.forEach(configureInput);\n\nsubmitButton.textContent = 'Save to table';\nsubmitButton.type = 'submit';\n\nlabelName.append(capitalize(nameInput.name), nameInput);\nlabelPosition.append(capitalize(positionInput.name), positionInput);\nlabelOffice.append(capitalize(officeSelect.name), officeSelect);\nlabelAge.append(capitalize(ageInput.name), ageInput);\nlabelSalary.append(capitalize(salaryInput.name), salaryInput);\n\nform.classList.add('new-employee-form');\n\nform.append(\n  labelName,\n  labelPosition,\n  labelOffice,\n  labelAge,\n  labelSalary,\n  submitButton,\n);\n\nform.addEventListener('submit', handleFormSubmit);\n\nbody.append(form);\n\ntableBody.addEventListener('dblclick', (cellEvent) => {\n  cellEvent.preventDefault();\n\n  if (cellEvent.target.tagName === 'TD') {\n    handleCellDoubleClick(cellEvent.target);\n  }\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","table","document","querySelector","tableHead","tHead","tableBody","tBodies","columns","rows","cells","body","form","createElement","labelName","labelPosition","labelOffice","labelAge","labelSalary","nameInput","positionInput","officeSelect","ageInput","salaryInput","submitButton","sortedColumn","activeRow","capitalize","string","toUpperCase","parseNumber","value","replace","parseCurrency","appendOptions","select","options","forEach","officeSelectOption","option","textContent","append","validateInput","input","trim","showNotification","type","message","div","span","classList","add","dataset","qa","setTimeout","remove","inputs","origin","column","addEventListener","reverse","columnIndex","indexOf","sort","rowA","rowB","cellA","_rowA_cells_columnIndex","cellB","_rowB_cells_columnIndex","localeCompare","apply","row","toggle","e","preventDefault","notification","elements","concat","tableRow","i1","input1","tableData","reset","cellEvent","target","tagName","handleCellDoubleClick","cell","text","cellIndex","isEditing","handleCellEdit","blurEvent","inputEvent","key","focus"],"version":3,"file":"index.ae03fa3b.js.map"}